@import "~disco/css/inc/vars";
@import "~core/css/inc/mixins";

$size: 26px;
$borderSize: 1px;

$transition: 0.3s;

$switchHandleActive: #fff;
$switchHandleInactive: transparentize($switchHandleActive, 0.75);
$switchHandleGap: 1px;
$switchHandleDisabledOpacity: 0.25;
$switchToBackgroundRatio: 2.7;

$switchStrokeOff: #858585;
$switchStrokeOn: #00A920;
$switchStrokeWidth: 1px;
$switchHandleActivePosition: round(($size * $switchToBackgroundRatio) - ($size + ($switchHandleGap * 2 + $switchStrokeWidth)));

$switchBackgroundOn: #57BD35;
$switchBackgroundOff: #919191;

$uninstallStripeColor1: #B1B1B1;
$uninstallStripeColor2: #D4D4D4;

$installStripeColor1: #00A920;
$installStripeColor2: #00C42E;

@keyframes stripes {
  from {
    background-position: 0 0;
  }
  to {
    background-position: $size $size/2;
  }
}

@mixin stripes($color1, $color2) {
  animation: stripes .5s linear infinite;
  background-image: repeating-linear-gradient(
    45deg,
    $color1,
    $color1 25%,
    $color2 25%,
    $color2 50%,
    $color1 50%);
  background-size: $size/2 $size/2;
}

.switch {
  position: relative;

  &.installed:after {
    background: url('../img/tick.svg') no-repeat 50% 50%;
    color: #fff;
    content: '';
    display: block;
    font-family: sans-serif;
    height: 16px;
    left: $size;
    // Allow mouse events to pass-through the image.
    pointer-events: none;
    position: absolute;
    top: ($size + ($switchHandleGap * 2))/2;
    transform: translate(-50%, -50%);
    width: 16px;
  }

  input:focus + label {
    @include focus();
  }

  input + label {
    background: #919191;
    border-radius: $size;
    border: $switchStrokeWidth solid $switchStrokeOff;
    cursor: pointer;
    display: block;
    height: $size + ($switchHandleGap * 2) + ($switchStrokeWidth * 2);
    overflow: hidden;
    position: relative;
    width: round($size * $switchToBackgroundRatio);
    transition: border $transition;

    &:before,
    &:after {
      content: "";
      display: block;
      position: absolute;
    }

    // Switch background.
    &:before {
      border-radius: $size;
      bottom: 0;
      left: 0;
      right: 0;
      top: 0;
      transition: background $transition;
    }

    // Handle.
    &:after {
      background: $switchHandleActive;
      border-radius: 50%;
      bottom: $switchHandleGap;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
      transform: translateX($switchHandleGap);
      top: $switchHandleGap;
      transition: transform $transition, box-shadow $transition;
      width: $size;
      height: $size;
      z-index: 3;
    }

    &:hover:after {
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 0 0 $size/2 transparentize($switchHandleActive, 0.80);
    }
  }

  &.uninstalling {
    input + label:before {
      @include stripes(
         $uninstallStripeColor1,
         $uninstallStripeColor2);
      // Reverse the stripe direction without
      // impacting the animation speed.
      transform: scaleX(-1);
    }
    input + label {
      &:after {
        transform: translateX($switchHandleGap);
      }
      &:hover:after {
        box-shadow: none;
      }
    }
  }

  &.installing {
    input + label {
      border-color: $switchStrokeOn;

      &:before {
        @include stripes(
           $installStripeColor1,
           $installStripeColor2);
      }
      &:after {
        transform: translateX($switchHandleActivePosition);
      }
      &:hover:after {
        box-shadow: none;
      }
    }
  }

  &.downloading {
    overflow: hidden;
    position: relative;

    input + label {
      border: 1px solid $switchStrokeOff;
      overflow: hidden;

      &:after {
        background: $switchHandleActive;
        transform: translateX($switchHandleActivePosition);
      }
    }
  }

  // Disabled State
  input:disabled + label,
  input:checked:disabled + label {
    cursor: not-allowed;
    &:after {
      background: $switchHandleInactive;
    }
    &:hover:after {
      box-shadow: none;
    }
  }

  input:checked + label {
    border-color: $switchStrokeOn;

    &:before {
      background: $switchBackgroundOn;
    }

    &:after {
      transform: translateX($switchHandleActivePosition);
    }
  }
}

.progress {
  background: transparentize(#3ef827, 0.50);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  width: 100%;
  transition: transform $transition;
  transform: translateX(-100%);
}

@for $i from 1 through 100 {
  [data-download-progress="#{$i}"] .progress {
    transform: translateX(#{percentage($i - 100) / 100});
  }
}
